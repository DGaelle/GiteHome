@model GiteHouse.Hebergement

@{
    ViewBag.Title = "Edit";
}

<h2>Modifiez votre hébergement</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal mt-5">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdHebergement)

        <div class="form-group">
            @Html.LabelFor(model => model.IdTypeHebergement, "-- Type d'Hébergement --", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.DropDownList("IdTypeHebergement", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdTypeHebergement, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionCourte, "Description Courte", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescriptionCourte, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescriptionCourte, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionLongue, "Description Longue", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescriptionLongue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescriptionLongue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surface, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surface, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surface, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NombreLits, "Nombre de Lits", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreLits, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreLits, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NombreChambres, "Nombre de Chambres", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreChambres, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreChambres, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Animaux, htmlAttributes: new { @class = "control-label col-md-2" })
            Oui
            @Html.RadioButtonFor(model => model.Animaux, true)
            Non
            @Html.RadioButtonFor(model => model.Animaux, false)

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fumeur, htmlAttributes: new { @class = "control-label col-md-2" })
            Oui
            @Html.RadioButtonFor(model => model.Fumeur, true)
            Non
            @Html.RadioButtonFor(model => model.Fumeur, false)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrixBase, "Prix / Nuit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrixBase, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrixBase, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group float-sm-right mt-5">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enregistrer" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
}

<div class="mt-5">
    @Html.ActionLink("Retour à la liste", "Index", null, new { @class= "btn btn-outline-danger"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

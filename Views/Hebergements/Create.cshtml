@model GiteHouse.Hebergement

@{
}
<div class="progress">
    <div class="progress-bar bg-info" role="progressbar" style="width: 33%" aria-valuenow="33" aria-valuemin="0" aria-valuemax="100"></div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal m-3">
        <h4> Devenez Hôte <br/><br />Etape 1 : Informations globales </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
    <div class="form-group input-group mt-5 w-100">
        <div class="input-group-prepend">
            <span class="input-group-text" style="width:15px;"><i class="fas fa-user-check"></i></span>
        </div>
        @Html.DropDownList("IdTypeHebergement", null, "-- Type d'Hébergement --", htmlAttributes: new { @class = "form-control ", @style = "width: 100px; color:cadetblue" })
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(model => model.IdTypeHebergement, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Description Courte", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DescriptionCourte, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DescriptionCourte, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Description Longue", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DescriptionLongue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DescriptionLongue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Surface, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Surface, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Surface, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Nombre de Lits", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NombreLits, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NombreLits, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Nombre de Chambres", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NombreChambres, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NombreChambres, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Animaux, htmlAttributes: new { @class = "control-label col-md-2" })
        Oui
        @Html.RadioButtonFor(model => model.Animaux, true)
        Non
        @Html.RadioButtonFor(model => model.Animaux, false)

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fumeur, htmlAttributes: new { @class = "control-label col-md-2" })
        Oui
        @Html.RadioButtonFor(model => model.Fumeur, true)
        Non
        @Html.RadioButtonFor(model => model.Fumeur, false)

    </div>

    <div class="form-group">
        @Html.Label("Prix / Nuit", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrixBase, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PrixBase, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group float-sm-right pt-5">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Suivant" class="btn btn-outline-success btn-lg" />
        </div>
    </div>

}


